# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master, dev, jaccard ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  windows:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Unshallow the repository
        run: git fetch --prune --unshallow

      - name: 'Set up Python 3.10'
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r gui/requirements.txt

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Build
        shell: bash
        run: |
          PNAME="prest-${{ runner.os }}-$(git describe --always)"

          echo "Building ${PNAME} for ${{ runner.os }}..."
          make

      - name: Short tests
        shell: bash
        run: make test

      - name: Long tests
        shell: bash
        run: make longtest

      - name: PyInstaller
        shell: bash
        run: |
          PNAME="prest-${{ runner.os }}-$(git describe --always)"

          pyinstaller \
              --add-data 'version.txt;.' \
              --add-binary 'prest-core/target/release/prest-core.exe;.' \
              --add-data 'gui/images;images' \
              --add-data 'docs/build/html;html' \
              --add-data 'preorders-7.bin;.' \
              --osx-bundle-identifier com.prestsoftware.prest \
              --onefile \
              --name "${PNAME}.exe" \
              -i gui/images/prest.ico \
              gui/main.py

          ls dist

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: prest-${{ runner.os }}
          path: dist/prest-*.exe
          
  linux:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Unshallow the repository
        run: git fetch --prune --unshallow

      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r gui/requirements.txt

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Build
        run: |
          PNAME="prest-${{ runner.os }}-$(git describe --always)"

          echo "Building ${PNAME} for ${{ runner.os }}..."
          make

      - name: Short tests
        shell: bash
        run: make test

      - name: Long tests
        shell: bash
        run: make longtest

      - name: PyInstaller
        run: |
          PNAME="prest-${{ runner.os }}-$(git describe --always)"

          pyinstaller \
              --add-data 'version.txt:.' \
              --add-binary 'prest-core/target/release/prest-core:.' \
              --add-data 'gui/images:images' \
              --add-data 'docs/build/html:html' \
              --add-data 'preorders-7.bin:.' \
              --osx-bundle-identifier com.prestsoftware.prest \
              --onefile \
              --name "$PNAME" \
              -i gui/images/prest.ico \
              gui/main.py

          ls dist

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: prest-${{ runner.os }}
          path: dist/prest-*

  macos:
    # The type of runner that the job will run on
    runs-on: macos-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Unshallow the repository
        run: git fetch --prune --unshallow

      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r gui/requirements.txt

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Build
        run: |
          PNAME="prest-${{ runner.os }}-$(git describe --always)"

          echo "Building ${PNAME} for ${{ runner.os }}..."
          make

      - name: Short tests
        shell: bash
        run: make test

      - name: Long tests
        shell: bash
        run: make longtest

      - name: PyInstaller
        run: |
          PNAME="prest-${{ runner.os }}-$(git describe --always)"

          pyinstaller \
              --add-data 'version.txt:.' \
              --add-binary 'prest-core/target/release/prest-core:.' \
              --add-data 'gui/images:images' \
              --add-data 'docs/build/html:html' \
              --add-data 'preorders-7.bin:.' \
              --osx-bundle-identifier com.prestsoftware.prest \
              --onefile \
              --name "$PNAME" \
              -i gui/images/prest.ico \
              gui/main.py

          ls dist

      - name: Add launcher
        run: |
          PNAME="prest-${{ runner.os }}-$(git describe --always)"

          cat osx-launcher.command "dist/${PNAME}" > "dist/${PNAME}.command"
          chmod +x "dist/${PNAME}.command"
          rm -f "dist/${PNAME}"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: prest-${{ runner.os }}
          path: dist/prest-*
